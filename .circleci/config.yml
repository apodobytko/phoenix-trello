version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.7.4-node-browsers
        environment:
          MIX_ENV: test
      - image: circleci/postgres:9.6.9-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: phoenix_trello_test
          POSTGRES_PASSWORD: postgres

    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Start chromedriver
          command: |
            chromedriver --port=4444 --url-base=wd/hub
          background: true
        
      - restore_cache:
          keys:
          - dependency-cache-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
          - dependency-cache-v1-{{ .Branch }}
          - dependency-cache-v1
      - restore_cache:
          keys:
          - build-cache-v1-{{ .Branch }}
          - build-cache-v1
      - restore_cache:
          keys:
          - npm-cache-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          - npm-cache-v1-{{ .Branch }}
          - npm-cache-v1
      - run: mix local.hex --force && mix local.rebar --force
      - run: mix deps.get && mix deps.compile
      - run: npm install
      - save_cache:
          key: dependency-cache-v1-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: dependency-cache-v1-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: dependency-cache-v1
          paths: "deps"
      - save_cache:
          key: build-cache-v1-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: build-cache-v1
          paths: "_build"
      - save_cache:
          key: npm-cache-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths: "node_modules"
      - save_cache:
          key: npm-cache-v1-{{ .Branch }}
          paths: "node_modules"
      - save_cache:
          key: npm-cache-v1
          paths: "node_modules"
      
      - run: ./node_modules/.bin/webpack
      - run: mix compile --force --warnings-as-errors
      - run: mix test --trace

      - store_artifacts:
          path: test-reports
